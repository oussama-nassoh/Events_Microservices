services:
  # Add your frontend service
  frontend:
    build:
      context: ./web  # Path to your frontend project
      dockerfile: Dockerfile
    container_name: web
    restart: unless-stopped
    ports:
      - "3000:80"  # Map port 3000 on host to 80 in container
    networks:
      - microservices-network
    depends_on:
      - api-gateway
  # Load Balancer for Local Development
  loadbalancer:
    image: nginx:alpine
    container_name: loadbalancer
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - microservices-network
    depends_on:
      - api-gateway
      - auth-service
      - user-service
      - event-service
      - ticket-service
      - notification-service
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./api-gateway:/var/www/html
    networks:
      - microservices-network
    depends_on:
      - gateway-db
      - auth-service
      - user-service
    environment:
      DB_CONNECTION: mysql
      DB_HOST: gateway-db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: password
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      # Microservices URLs (using container names)
      AUTH_SERVICE_URL: http://auth-service:8001
      USER_SERVICE_URL: http://user-service:8002
      EVENT_SERVICE_URL: http://event-service:8003
      TICKET_SERVICE_URL: http://ticket-service:8004

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./auth-service:/var/www/html
    networks:
      - microservices-network
    depends_on:
      - auth-db
    environment:
      DB_CONNECTION: mysql
      DB_HOST: auth-db
      DB_PORT: 3306
      DB_DATABASE: auth_service_db
      DB_USERNAME: laravel
      DB_PASSWORD: password
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      # Other services
      USER_SERVICE_URL: http://user-service:8002

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: unless-stopped
    ports:
      - "8002:8002"
    volumes:
      - ./user-service:/var/www/html
    networks:
      - microservices-network
    depends_on:
      - user-db
    environment:
      DB_CONNECTION: mysql
      DB_HOST: user-db
      DB_PORT: 3306
      DB_DATABASE: user_service_db
      DB_USERNAME: laravel
      DB_PASSWORD: password
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      # Other services
      AUTH_SERVICE_URL: http://auth-service:8001

  # Event Service
  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    container_name: event-service
    restart: unless-stopped
    ports:
      - "8003:8003"
    volumes:
      - ./event-service:/var/www/html
    networks:
      - microservices-network
    depends_on:
      - event-db
    environment:
      DB_CONNECTION: mysql
      DB_HOST: event-db
      DB_PORT: 3306
      DB_DATABASE: event_service_db
      DB_USERNAME: laravel
      DB_PASSWORD: password
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      # Other services
      AUTH_SERVICE_URL: http://auth-service:8001
      USER_SERVICE_URL: http://user-service:8002

  # Ticket Service
  ticket-service:
    build:
      context: ./ticket-service
      dockerfile: Dockerfile
    container_name: ticket-service
    restart: unless-stopped
    ports:
      - "8004:8004"
    volumes:
      - ./ticket-service:/var/www/html
    networks:
      - microservices-network
    depends_on:
      - ticket-db
      - event-service
    environment:
      DB_CONNECTION: mysql
      DB_HOST: ticket-db
      DB_PORT: 3306
      DB_DATABASE: ticket_service_db
      DB_USERNAME: laravel
      DB_PASSWORD: password
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      # Other services
      AUTH_SERVICE_URL: http://auth-service:8001
      USER_SERVICE_URL: http://user-service:8002
      EVENT_SERVICE_URL: http://event-service:8003

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "8005:8005"
    volumes:
      - ./notification-service:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/storage

    networks:
      - microservices-network
    depends_on:
      - notification-db
      - ticket-service
    environment:
      DB_CONNECTION: mysql
      DB_HOST: notification-db
      DB_PORT: 3306
      DB_DATABASE: notification_service_db
      DB_USERNAME: laravel
      DB_PASSWORD: password
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: database

  # Gateway Database
  gateway-db:
    image: mariadb:10.6
    container_name: gateway-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    ports:
      - "3306:3306"
    volumes:
      - gateway_db_data:/var/lib/mysql
    networks:
      - microservices-network

  # Auth Service Database
  auth-db:
    image: mariadb:10.6
    container_name: auth-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: auth_service_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    ports:
      - "3307:3306"
    volumes:
      - auth_db_data:/var/lib/mysql
    networks:
      - microservices-network

  # User Service Database
  user-db:
    image: mariadb:10.6
    container_name: user-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: user_service_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    ports:
      - "3308:3306"
    volumes:
      - user_db_data:/var/lib/mysql
    networks:
      - microservices-network

# Event Service Database
  event-db:
    image: mariadb:10.6
    container_name: event-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: event_service_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    ports:
      - "3309:3306"
    volumes:
      - event_db_data:/var/lib/mysql
    networks:
      - microservices-network

  # Ticket Service Database
  ticket-db:
    image: mariadb:10.6
    container_name: ticket-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ticket_service_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    ports:
      - "3310:3306"
    volumes:
      - ticket_db_data:/var/lib/mysql
    networks:
      - microservices-network

  # Ticket Service Database
  notification-db:
    image: mariadb:10.6
    container_name: notification-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: notification_service_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    ports:
      - "3311:3306"
    volumes:
      - notification_db_data:/var/lib/mysql
    networks:
      - microservices-network

# Volumes
volumes:
  gateway_db_data:
    driver: local
  auth_db_data:
    driver: local
  user_db_data:
    driver: local
  event_db_data:
    driver: local
  ticket_db_data:
    driver: local
  notification_db_data:
    driver: local

# Networks
networks:
  microservices-network:
    driver: bridge